---
import { type CollectionEntry, getCollection } from "astro:content";

import Document from "../layouts/document.astro";

import Section from "../components/section.astro";
import PostHeader from "../components/post-header.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;
const date = new Date(post.data.date);

const { Content } = await post.render();
---

<Document
  seo={{
    title: post.data.title,
    description: post.data.description,
    keywords: post.data.keywords,
    urlPath: `/${post.slug}`,
  }}
>
  <slot name="head">
    <meta name="article:published_time" content={date.toISOString()} />
    <meta name="article:modified_time" content={date.toISOString()} />
    <meta name="article:section" content={post.data.title} />
    <meta name="article:title" content={post.data.title} />
    <meta name="article:description" content={post.data.description} />
    <meta name="article:tag" content={post.data.keywords.join(", ")} />
  </slot>

  <PostHeader date={date} post={post} />

  <Section class="md">
    <Content />
  </Section>

  <script
    src="https://utteranc.es/client.js"
    repo="arthurfiorette/place"
    issue-term="title"
    label="posts"
    theme="preferred-color-scheme"
    crossorigin="anonymous"
    async></script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const headers = document.querySelectorAll("h2");
      headers.forEach((header) => {
        const anchor = document.createElement("a");
        anchor.href = `#${header.id}`; // Certifique-se de que o h2 tenha um id para ancoragem
        anchor.textContent = header.textContent;

        header.innerHTML = ""; // Limpa o conte√∫do atual
        header.appendChild(anchor); // Adiciona o <a> dentro do <h2>
      });
    });
  </script>
</Document>

<style is:global lang="scss">
  .md {
    pre {
      @apply font-mono p-4 rounded-md;
      font-family: "Cascadia Code", Consolas, monaco, monospace !important;
      font-variant-ligatures: common-ligatures !important;
    }

    :not(pre) > code {
      @apply bg-neutral-800 p-1 rounded-md font-normal text-cream-light;
      font-family: "Cascadia Code", Consolas, monaco, monospace !important;
      font-variant-ligatures: common-ligatures !important;
    }

    a[href] {
      @apply font-normal no-underline transition-all hover:underline;
    }

    blockquote {
      @apply font-normal not-italic;
    }

    img {
      @apply mx-auto;
    }
  }
</style>
